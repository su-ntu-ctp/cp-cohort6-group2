 name: Full Dev-ployment

#  on:
#   pull_request:
#     branches: [ "main" ]

 on:
  push:
    branches: [ "dev" ]
    paths:
      - 'envs/dev/**'

 env:            
  AWS_REGION: ap-southeast-1  

 jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      run: terraform fmt --recursive
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Validate
      run: terraform validate -no-color
    
    - name: Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform

    - name: Terraform Plan
      run: terraform plan

  CD:
    runs-on: ubuntu-latest
    needs: CI

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Export terraform outputs
      id: tfout
      run: |
        echo "CF_ID=$(terraform output -raw cf_id)" >> $GITHUB_OUTPUT
        echo "S3_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT
        echo "CF_DOMAIN=$(terraform output -raw cf_domain)" >> $GITHUB_OUTPUT

    - name: s3 deployment
      run: aws s3 sync . s3://${{ steps.tfout.outputs.S3_NAME }}
      working-directory: ./static-website

    - name: Invalidate cache
      run: aws cloudfront create-invalidation --distribution-id ${{ steps.tfout.outputs.CF_ID }} --paths "/*"

    - name: Output cf domain
      run: echo "${{ steps.tfout.outputs.CF_DOMAIN }}"
